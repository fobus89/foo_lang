// –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–Ω–∞–ª–æ–≤ –≤ foo_lang v2
// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è: trySend, channelSelect, channelTimeout, channelRange, channelDrain

println("=== üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–Ω–∞–ª–æ–≤ ===")

// 1. trySend - –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
println("\n1. üì§ TrySend - –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞:")

let bufferChannel = newChannel(2)  // –ë—É—Ñ–µ—Ä –Ω–∞ 2 —ç–ª–µ–º–µ–Ω—Ç–∞
println("–ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω —Å –±—É—Ñ–µ—Ä–æ–º 2")

// –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–∞–Ω–∞–ª –Ω–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–º–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
let success1 = trySend(bufferChannel, "message1")
let success2 = trySend(bufferChannel, "message2") 
let success3 = trySend(bufferChannel, "message3")  // –î–æ–ª–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å false

println("trySend —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: " + success1.toString() + ", " + success2.toString() + ", " + success3.toString())
println("–î–ª–∏–Ω–∞ –∫–∞–Ω–∞–ª–∞: " + len(bufferChannel).toString())

// 2. channelDrain - –æ—á–∏—Å—Ç–∫–∞ –∫–∞–Ω–∞–ª–∞
println("\n2. üßΩ ChannelDrain - –æ—á–∏—Å—Ç–∫–∞ –∫–∞–Ω–∞–ª–∞:")

let drainChannel = newChannel(5)
send(drainChannel, "item1")
send(drainChannel, "item2")
send(drainChannel, "item3")
send(drainChannel, "item4")

println("–ü–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π - –¥–ª–∏–Ω–∞: " + len(drainChannel).toString())

let drainedItems = channelDrain(drainChannel)
println("–ò–∑–≤–ª–µ—á–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: " + drainedItems.length().toString())
println("–ü–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ - –¥–ª–∏–Ω–∞: " + len(drainChannel).toString())

// 3. channelSelect - –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä –∫–∞–Ω–∞–ª–æ–≤
println("\n3. üîÄ ChannelSelect - –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä:")

let selectCh1 = newChannel(1)
let selectCh2 = newChannel(1)
let selectCh3 = newChannel(1)

// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ä–∞–∑–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
send(selectCh1, "from channel 1")
send(selectCh3, "from channel 3")

let channels = [selectCh1, selectCh2, selectCh3]
let selectResult = channelSelect(channels)

println("Select –≤—ã–±—Ä–∞–ª –∫–∞–Ω–∞–ª " + selectResult.index.toString())
println("–ü–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: " + selectResult.value.toString())

// –ü–æ–≤—Ç–æ—Ä–∏–º select - –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –∫–∞–Ω–∞–ª
let selectResult2 = channelSelect(channels)
println("–í—Ç–æ—Ä–æ–π select –≤—ã–±—Ä–∞–ª –∫–∞–Ω–∞–ª " + selectResult2.index.toString())
println("–í—Ç–æ—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: " + selectResult2.value.toString())

// 4. channelTimeout - –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
println("\n4. ‚è∞ ChannelTimeout - –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ç–∞–π–º–∞—É—Ç–æ–º:")

let timeoutChannel = newChannel(0)  // –ù–µ–±—É—Ñ–µ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª

// –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –ø—É—Å—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Å –∫–æ—Ä–æ—Ç–∫–∏–º —Ç–∞–π–º–∞—É—Ç–æ–º
let timeoutResult = channelTimeout(timeoutChannel, "receive", 50)
println("–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º: " + timeoutResult.toString())

// –û—Ç–ø—Ä–∞–≤–∏–º –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å –±–æ–ª—å—à–∏–º —Ç–∞–π–º–∞—É—Ç–æ–º
send(timeoutChannel, "timeout test message")
let successResult = channelTimeout(timeoutChannel, "receive", 1000)
println("–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ: " + successResult.toString())

// 5. channelRange - –∏—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –∫–∞–Ω–∞–ª—É
println("\n5. üîÑ ChannelRange - –∏—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –∫–∞–Ω–∞–ª—É:")

let rangeChannel = newChannel(4)

// –ó–∞–ø–æ–ª–Ω—è–µ–º –∫–∞–Ω–∞–ª –¥–∞–Ω–Ω—ã–º–∏
send(rangeChannel, "range_msg_1")
send(rangeChannel, "range_msg_2")
send(rangeChannel, "range_msg_3")
send(rangeChannel, "range_msg_4")

println("–ö–∞–Ω–∞–ª –∑–∞–ø–æ–ª–Ω–µ–Ω, –¥–ª–∏–Ω–∞: " + len(rangeChannel).toString())

// –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã range
close(rangeChannel)

// –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
let allMessages = channelRange(rangeChannel)
println("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: " + allMessages.length().toString())
println("–ö–∞–Ω–∞–ª –ø–æ—Å–ª–µ range, –¥–ª–∏–Ω–∞: " + len(rangeChannel).toString())

// 6. –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø—Ä–∏–º–µ—Ä - Producer-Consumer —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
println("\n6. üè≠ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π Producer-Consumer –ø—Ä–∏–º–µ—Ä:")

let producerCh = newChannel(10)
let consumerCh = newChannel(5)
let errorCh = newChannel(3)

// Producer: –∑–∞–ø–æ–ª–Ω—è–µ–º –∫–∞–Ω–∞–ª –∑–∞–¥–∞–Ω–∏—è–º–∏
println("üì¶ Producer: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–¥–∞–Ω–∏—è...")

trySend(producerCh, "task_1")
trySend(producerCh, "task_2")
trySend(producerCh, "task_3")
trySend(producerCh, "task_4")
trySend(producerCh, "task_5")
trySend(producerCh, "task_6")
trySend(producerCh, "task_7")
let success8 = trySend(producerCh, "task_8")

if !success8 {
    println("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ 8")
    trySend(errorCh, "failed_task_8")
}

println("Producer –∫–∞–Ω–∞–ª, –¥–ª–∏–Ω–∞: " + len(producerCh).toString())
println("Error –∫–∞–Ω–∞–ª, –¥–ª–∏–Ω–∞: " + len(errorCh).toString())

// Consumer: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞–Ω–∏—è —Å select
println("\nüîß Consumer: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞–Ω–∏—è...")

let consumerChannels = [producerCh, errorCh]

let selectResult1 = channelSelect(consumerChannels)
println("1. –í—ã–±—Ä–∞–Ω –∫–∞–Ω–∞–ª " + selectResult1.index.toString() + ": " + selectResult1.value.toString())

let selectResult2 = channelSelect(consumerChannels)
println("2. –í—ã–±—Ä–∞–Ω –∫–∞–Ω–∞–ª " + selectResult2.index.toString() + ": " + selectResult2.value.toString())

let selectResult3 = channelSelect(consumerChannels)
println("3. –í—ã–±—Ä–∞–Ω –∫–∞–Ω–∞–ª " + selectResult3.index.toString() + ": " + selectResult3.value.toString())

// –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
println("\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
println("Producer –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–¥–∞–Ω–∏–π: " + len(producerCh).toString())
println("Consumer –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π: " + len(consumerCh).toString())
println("Error –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫: " + len(errorCh).toString())

// –û—á–∏—â–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–∞–Ω–Ω—ã–µ
let remainingTasks = channelDrain(producerCh)
let completedTasks = channelDrain(consumerCh)
let remainingErrors = channelDrain(errorCh)

println("\nüßπ –û—á–∏—Å—Ç–∫–∞:")
println("–°–ª–∏—Ç–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–¥–∞–Ω–∏–π: " + remainingTasks.length().toString())
println("–°–ª–∏—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π: " + completedTasks.length().toString())
println("–°–ª–∏—Ç–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –æ—à–∏–±–æ–∫: " + remainingErrors.length().toString())

println("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∫–∞–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")