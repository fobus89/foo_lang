// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º –≤ foo_lang
println("=== –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ë–û–¢–´ –° –î–ê–¢–û–ô –ò –í–†–ï–ú–ï–ù–ï–ú ===")

// 1. –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
println("\nüïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è:")
let currentTime = now()
println("–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: " + timeFormat(currentTime, "datetime"))
println("–ì–æ–¥: " + timeYear(currentTime).toString())
println("–ú–µ—Å—è—Ü: " + timeMonth(currentTime).toString())  
println("–î–µ–Ω—å: " + timeDay(currentTime).toString())
println("–ß–∞—Å: " + timeHour(currentTime).toString())
println("–ú–∏–Ω—É—Ç–∞: " + timeMinute(currentTime).toString())
println("–°–µ–∫—É–Ω–¥–∞: " + timeSecond(currentTime).toString())

// 2. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ Unix timestamp
println("\nüìÖ –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ timestamp:")
let timestamp = 1609459200  // 2021-01-01 00:00:00 UTC
let specificTime = timeFromUnix(timestamp)
println("–í—Ä–µ–º—è –∏–∑ timestamp " + timestamp.toString() + ": " + timeFormat(specificTime, "datetime"))

// 3. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
println("\nüé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏:")
let demoTime = timeFromUnix(1640995200)  // 2022-01-01 00:00:00 UTC
println("–¢–æ–ª—å–∫–æ –¥–∞—Ç–∞: " + timeFormat(demoTime, "date"))
println("–¢–æ–ª—å–∫–æ –≤—Ä–µ–º—è: " + timeFormat(demoTime, "time"))
println("–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: " + timeFormat(demoTime, "datetime"))
println("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç: " + timeFormat(demoTime, "YYYY-MM-DD HH:mm:ss"))
println("ISO 8601: " + timeFormat(demoTime, "iso8601"))

// 4. –ê—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞ —Å –¥–∞—Ç–∞–º–∏
println("\n‚ûï –ê—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞ —Å –¥–∞—Ç–∞–º–∏:")
let baseTime = timeFromUnix(1609459200)  // 2021-01-01 00:00:00 UTC
println("–ë–∞–∑–æ–≤–æ–µ –≤—Ä–µ–º—è: " + timeFormat(baseTime, "datetime"))

let plusDays = timeAddDays(baseTime, 15)
println("+ 15 –¥–Ω–µ–π: " + timeFormat(plusDays, "datetime"))

let plusMonths = timeAddMonths(baseTime, 3)
println("+ 3 –º–µ—Å—è—Ü–∞: " + timeFormat(plusMonths, "datetime"))

let plusYears = timeAddYears(baseTime, 2)
println("+ 2 –≥–æ–¥–∞: " + timeFormat(plusYears, "datetime"))

let plusHours = timeAddHours(baseTime, 12)
println("+ 12 —á–∞—Å–æ–≤: " + timeFormat(plusHours, "datetime"))

let plusMinutes = timeAddMinutes(baseTime, 30)
println("+ 30 –º–∏–Ω—É—Ç: " + timeFormat(plusMinutes, "datetime"))

let plusSeconds = timeAddSeconds(baseTime, 45)
println("+ 45 —Å–µ–∫—É–Ω–¥: " + timeFormat(plusSeconds, "datetime"))

// 5. –†–∞–∑–Ω–æ—Å—Ç—å –º–µ–∂–¥—É –≤—Ä–µ–º–µ–Ω–∞–º–∏
println("\n‚è±Ô∏è  –†–∞–∑–Ω–æ—Å—Ç—å –º–µ–∂–¥—É –≤—Ä–µ–º–µ–Ω–∞–º–∏:")
let time1 = timeFromUnix(1609459200)  // 2021-01-01 00:00:00 UTC
let time2 = timeFromUnix(1609545600)  // 2021-01-02 00:00:00 UTC (–¥–µ–Ω—å —Å–ø—É—Å—Ç—è)

println("–í—Ä–µ–º—è 1: " + timeFormat(time1, "datetime"))
println("–í—Ä–µ–º—è 2: " + timeFormat(time2, "datetime"))

let diffSeconds = timeDiff(time2, time1)
println("–†–∞–∑–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö: " + diffSeconds.toString())

let diffMinutes = timeDiffMinutes(time2, time1)
println("–†–∞–∑–Ω–æ—Å—Ç—å –≤ –º–∏–Ω—É—Ç–∞—Ö: " + diffMinutes.toString())

let diffHours = timeDiffHours(time2, time1)
println("–†–∞–∑–Ω–æ—Å—Ç—å –≤ —á–∞—Å–∞—Ö: " + diffHours.toString())

let diffDays = timeDiffDays(time2, time1)
println("–†–∞–∑–Ω–æ—Å—Ç—å –≤ –¥–Ω—è—Ö: " + diffDays.toString())

// 6. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω
println("\nüîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω:")
let earlier = timeFromUnix(1609459200)   // 2021-01-01 00:00:00 UTC
let later = timeFromUnix(1609545600)     // 2021-01-02 00:00:00 UTC
let same = timeFromUnix(1609459200)      // 2021-01-01 00:00:00 UTC

println("–†–∞–Ω–Ω–µ–µ –≤—Ä–µ–º—è: " + timeFormat(earlier, "datetime"))
println("–ü–æ–∑–¥–Ω–µ–µ –≤—Ä–µ–º—è: " + timeFormat(later, "datetime"))

let isBefore = timeBefore(earlier, later)
println("–†–∞–Ω–Ω–µ–µ –≤—Ä–µ–º—è < –ü–æ–∑–¥–Ω–µ–µ –≤—Ä–µ–º—è: " + isBefore.toString())

let isAfter = timeAfter(later, earlier)
println("–ü–æ–∑–¥–Ω–µ–µ –≤—Ä–µ–º—è > –†–∞–Ω–Ω–µ–µ –≤—Ä–µ–º—è: " + isAfter.toString())

let isEqual = timeEqual(earlier, same)
println("–†–∞–Ω–Ω–µ–µ –≤—Ä–µ–º—è == –¢–∞–∫–æ–µ –∂–µ –≤—Ä–µ–º—è: " + isEqual.toString())

// 7. –î–Ω–∏ –Ω–µ–¥–µ–ª–∏
println("\nüìÜ –î–Ω–∏ –Ω–µ–¥–µ–ª–∏:")
let monday = timeFromUnix(1609804800)    // 2021-01-04 00:00:00 UTC (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫)
let tuesday = timeFromUnix(1609891200)   // 2021-01-05 00:00:00 UTC (–≤—Ç–æ—Ä–Ω–∏–∫)
let wednesday = timeFromUnix(1609977600) // 2021-01-06 00:00:00 UTC (—Å—Ä–µ–¥–∞)

println("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ " + timeWeekday(monday).toString() + " (0=–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)")
println("–í—Ç–æ—Ä–Ω–∏–∫: –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ " + timeWeekday(tuesday).toString())
println("–°—Ä–µ–¥–∞: –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ " + timeWeekday(wednesday).toString())

// 8. Unix timestamps
println("\nüî¢ Unix timestamps:")
let testTime = timeFromUnix(1640995200)  // 2022-01-01 00:00:00 UTC
println("–í—Ä–µ–º—è: " + timeFormat(testTime, "datetime"))

let unixTimestamp = timeUnix(testTime)
println("Unix timestamp: " + unixTimestamp.toString())

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
let roundTripTime = timeFromUnix(unixTimestamp)
println("–û–±—Ä–∞—Ç–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: " + timeFormat(roundTripTime, "datetime"))

let isEqualRoundTrip = timeEqual(testTime, roundTripTime)
println("–í—Ä–µ–º–µ–Ω–∞ —Ä–∞–≤–Ω—ã –ø–æ—Å–ª–µ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: " + isEqualRoundTrip.toString())

// 9. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä: —Ä–∞—Å—á–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞
println("\nüéÇ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä - —Ä–∞—Å—á–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞:")
let birthDate = timeFromUnix(946684800)  // 2000-01-01 00:00:00 UTC (–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è)
let today = now()

println("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: " + timeFormat(birthDate, "date"))
println("–°–µ–≥–æ–¥–Ω—è: " + timeFormat(today, "date"))

let ageInDays = timeDiffDays(today, birthDate)
println("–í–æ–∑—Ä–∞—Å—Ç –≤ –¥–Ω—è—Ö: " + ageInDays.toString())

let ageInYears = ageInDays / 365.25  // –£—á–∏—Ç—ã–≤–∞–µ–º –≤–∏—Å–æ–∫–æ—Å–Ω—ã–µ –≥–æ–¥—ã
println("–í–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö (–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ): " + ageInYears.toString())

// 10. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
println("\n‚è∞ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:")
let reminderBase = now()
let reminder1Hour = timeAddHours(reminderBase, 1)
let reminder1Day = timeAddDays(reminderBase, 1)
let reminder1Week = timeAddDays(reminderBase, 7)

println("–°–µ–π—á–∞—Å: " + timeFormat(reminderBase, "datetime"))
println("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ —á–∞—Å: " + timeFormat(reminder1Hour, "datetime"))
println("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∑–∞–≤—Ç—Ä–∞: " + timeFormat(reminder1Day, "datetime"))
println("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é: " + timeFormat(reminder1Week, "datetime"))

println("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
println("foo_lang –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º:")
println("- –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ (now, timeFromUnix, timeFromString)")
println("- –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–≥–æ–¥, –º–µ—Å—è—Ü, –¥–µ–Ω—å, —á–∞—Å, –º–∏–Ω—É—Ç–∞, —Å–µ–∫—É–Ω–¥–∞)")
println("- –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ)")
println("- –ê—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞ (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–Ω–µ–π, –º–µ—Å—è—Ü–µ–≤, –ª–µ—Ç, —á–∞—Å–æ–≤, –º–∏–Ω—É—Ç, —Å–µ–∫—É–Ω–¥)")
println("- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ (before, after, equal)")
println("- –†–∞–∑–Ω–æ—Å—Ç–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö, –º–∏–Ω—É—Ç–∞—Ö, —á–∞—Å–∞—Ö, –¥–Ω—è—Ö)")
println("- Unix timestamps –∏ –æ–±—Ä–∞—Ç–Ω—ã–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è")
println("- –î–Ω–∏ –Ω–µ–¥–µ–ª–∏ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è")