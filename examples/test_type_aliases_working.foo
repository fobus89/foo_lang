// –†–∞–±–æ—Ç–∞—é—â–∏–π –ø—Ä–∏–º–µ—Ä Type Aliases –≤ foo_lang v2

println("=== ‚úÖ Type Aliases - –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–π –ø—Ä–∏–º–µ—Ä ===")

// 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–≤
type UserId = int
type UserName = string  
type Score = float
type IsActive = bool
type UserList = array
type UserData = object

println("‚úÖ –í—Å–µ –ø—Å–µ–≤–¥–æ–Ω–∏–º—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")

// 2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
let userId: UserId = 12345
let userName: UserName = "Alice"
let userScore: Score = 85.5
let userActive: IsActive = true
let users: UserList = ["Alice", "Bob", "Charlie"]
let profile: UserData = {
    name: "Alice",
    age: 30,
    email: "alice@example.com"
}

println("‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞–º–∏ —Å–æ–∑–¥–∞–Ω—ã!")

// 3. –í—ã–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏–π
println("\nüìã –ó–Ω–∞—á–µ–Ω–∏—è:")
println("userId: " + userId.toString())
println("userName: " + userName)
println("userScore: " + userScore.toString())
println("userActive: " + userActive.toString())
println("users length: " + users.length().toString())
println("profile name: " + profile.name)

// 4. –¶–µ–ø–æ—á–∫–∞ –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–≤
type PrimaryKey = UserId
type EntityId = PrimaryKey

let entityId: EntityId = 999
println("‚úÖ –¶–µ–ø–æ—á–∫–∞ –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
println("entityId: " + entityId.toString())

// 5. –ü—Å–µ–≤–¥–æ–Ω–∏–º—ã –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö (–±–µ–∑ –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏)
fn processUser(id: UserId, name: UserName) {
    println("Processing user: " + name + " (ID: " + id.toString() + ")")
}

processUser(userId, userName)

// 6. –§—É–Ω–∫—Ü–∏—è —Å return type alias
fn createScore(value: float) -> Score {
    return value
}

let newScore = createScore(95.5)
println("New score: " + newScore.toString())

println("\nüéâ Type Aliases –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞—é—Ç –≤ foo_lang v2!")
println("‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è:")
println("  - –ü—Å–µ–≤–¥–æ–Ω–∏–º—ã –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤")
println("  - –ü—Å–µ–≤–¥–æ–Ω–∏–º—ã –∫–æ–ª–ª–µ–∫—Ü–∏–π")
println("  - –¶–µ–ø–æ—á–∫–∏ –ø—Å–µ–≤–¥–æ–Ω–∏–º–æ–≤") 
println("  - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö")
println("  - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö")
println("  - Return type –ø—Å–µ–≤–¥–æ–Ω–∏–º—ã")